{"version":3,"sources":["webpack:///src/app/teacher/shared/teacher-modal/teacher-modal.component.ts","webpack:///src/app/teacher/shared/teacher-modal/teacher-modal.component.html","webpack:///src/app/teacher/teacher-list/teacher-list.component.ts","webpack:///src/app/teacher/teacher-list/teacher-list.component.html","webpack:///src/app/teacher/teacher-routing.module.ts","webpack:///src/app/teacher/teacher.module.ts"],"names":["TeacherModalComponent","activeModal","btnLabel","createForm","teacherForm","invalid","close","value","firstName","required","minLength","lastName","email","gender","company","teacher","patchValue","controls","handleConfirm","selector","templateUrl","styleUrls","TeacherListComponent","teacherService","modalService","alert","loadTeachers","modalRef","open","componentInstance","title","result","then","createTeacher","subscribe","success","error","updateTeacher","id","deleteTeacher","info","getAll","response","teachers","addTeacher","routes","path","component","TeacherRoutingModule","forChild","imports","exports","TeacherModule","declarations"],"mappings":"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","file":"teacher-teacher-module-es5.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, AbstractControl, FormControl, Validators } from '@angular/forms';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { TeacherModel } from '../../core/teacher.model';\n\n@Component({\n  selector: 'cm-teacher-modal',\n  templateUrl: './teacher-modal.component.html',\n  styleUrls: ['./teacher-modal.component.css']\n})\nexport class TeacherModalComponent implements OnInit {\n  @Input() title: string;\n  @Input() teacher: TeacherModel;\n  @Input() btnLabel: string = 'Add'\n  teacherForm: FormGroup;\n\n  constructor(public activeModal: NgbActiveModal) {}\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  get firstNameField(): AbstractControl {\n    return this.teacherForm.controls.firstName;\n  }\n\n  get lastNameField(): AbstractControl {\n    return this.teacherForm.controls.lastName;\n  }\n\n  get emailField(): AbstractControl {\n    return this.teacherForm.controls.email;\n  }\n\n  handleConfirm() {\n    if (this.teacherForm.invalid) return;\n\n    this.activeModal.close(this.teacherForm.value);\n  }\n\n  private createForm() {\n    this.teacherForm = new FormGroup({\n      firstName: new FormControl(null, [Validators.required, Validators.minLength(2)]),\n      lastName: new FormControl(null, [Validators.required, Validators.minLength(2)]),\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      gender: new FormControl('male', Validators.required),\n      company: new FormControl(null)\n    });\n\n    if (this.teacher) {\n      this.teacherForm.patchValue(this.teacher);\n    }\n  }\n\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title\">{{ title }}</h4>\n  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss()\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n\n  <form [formGroup]=\"teacherForm\">\n\n    <div class=\"form-group\">\n      <label>First Name: </label>\n      <input type=\"text\" class=\"form-control\" formControlName=\"firstName\" />\n      <span class=\"text-danger\" *ngIf=\"firstNameField.touched && firstNameField.errors?.required\">\n        Field is required\n      </span>\n      <span class=\"text-danger\" *ngIf=\"firstNameField.touched && firstNameField.errors?.minlength\">\n        Minimum 2 characters is required\n      </span>\n    </div>\n\n    <div class=\"form-group\">\n      <label>Last Name: </label>\n      <input type=\"text\" class=\"form-control\" formControlName=\"lastName\" />\n      <span class=\"text-danger\" *ngIf=\"lastNameField.touched && lastNameField.errors?.required\">\n        Field is required\n      </span>\n      <span class=\"text-danger\" *ngIf=\"lastNameField.touched && lastNameField.errors?.minlength\">\n        Minimum 2 characters is required\n      </span>\n    </div>\n\n    <div class=\"form-group\">\n      <label>Email: </label>\n      <input type=\"email\" class=\"form-control\" formControlName=\"email\" />\n      <span class=\"text-danger\" *ngIf=\"emailField.touched && emailField.errors?.required\">\n        Field is required\n      </span>\n      <span class=\"text-danger\" *ngIf=\"emailField.touched && emailField.errors?.email\">\n        Email is not valid\n      </span>\n    </div>\n\n    <div class=\"form-group\">\n      <label>Company: </label>\n      <input type=\"text\" class=\"form-control\" formControlName=\"company\" />\n    </div>\n\n    <div class=\"form-check form-check-inline\">\n      <input class=\"form-check-input\" formControlName=\"gender\" type=\"radio\" name=\"gender\" id=\"male\" value=\"male\">\n      <label class=\"form-check-label\" for=\"male\">Male</label>\n    </div>\n    <div class=\"form-check form-check-inline\">\n      <input class=\"form-check-input\" formControlName=\"gender\" type=\"radio\" name=\"gender\" id=\"female\" value=\"female\">\n      <label class=\"form-check-label\" for=\"female\">Female</label>\n    </div>\n\n  </form>\n</div>\n<div class=\"modal-footer\">\n  <button type=\"submit\" class=\"btn btn-outline-primary\" [disabled]=\"teacherForm.invalid\" (click)=\"handleConfirm()\">{{ btnLabel }}</button>\n  <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"activeModal.close()\">Close</button>\n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { NgbModal } from \"@ng-bootstrap/ng-bootstrap\";\n\nimport { TeacherModel } from \"../core/teacher.model\";\nimport { TeacherService } from \"../core/teacher.service\";\nimport { TeacherModalComponent } from \"../shared/teacher-modal/teacher-modal.component\";\nimport { AlertService } from 'src/app/shared/alert.service';\nimport { ConfirmModalComponent } from 'src/app/shared/confirm-modal/confirm-modal.component';\n\n@Component({\n  selector: \"cm-teacher-list\",\n  templateUrl: \"./teacher-list.component.html\",\n  styleUrls: [\"./teacher-list.component.css\"],\n})\nexport class TeacherListComponent implements OnInit {\n  teachers: TeacherModel[];\n\n  constructor(\n    private teacherService: TeacherService,\n    private modalService: NgbModal,\n    private alert: AlertService\n  ) {}\n\n  ngOnInit(): void {\n    this.loadTeachers();\n  }\n\n  addTeacher() {\n    const modalRef = this.modalService.open(TeacherModalComponent);\n    modalRef.componentInstance.title = \"Add Teacher\";\n\n    modalRef.result.then((result) => {\n      if (!result) return;\n\n      this.teacherService.createTeacher(result).subscribe(\n        (success) => {\n          this.loadTeachers();\n        },\n        (error) => {\n          this.alert.error(\"Please try later\", \"Unable to create teacher\");\n        }\n      );\n    });\n  }\n\n  editTeacher(teacher: TeacherModel) {\n    const modalRef = this.modalService.open(TeacherModalComponent);\n    modalRef.componentInstance.title = \"Edit Teacher\";\n    modalRef.componentInstance.teacher = teacher;\n    modalRef.componentInstance.btnLabel = \"Edit\";\n\n    modalRef.result.then((result) => {\n      if (!result) return;\n\n      this.teacherService.updateTeacher(teacher.id, result).subscribe(\n        (success) => {\n          this.loadTeachers();\n        },\n        (error) => {\n          this.alert.error(\"Please try later\", \"Unable to edit teacher\");\n        }\n      );\n    });\n  }\n\n  deleteTeacher(teacher: TeacherModel) {\n      const modalRef = this.modalService.open(ConfirmModalComponent);\n      modalRef.componentInstance.title = `Delete ${teacher.firstName} ${teacher.lastName}`;\n  \n      modalRef.result.then((result) => {\n        if (!result) return;\n  \n        this.teacherService.deleteTeacher(teacher.id).subscribe(\n          (success) => {\n            this.alert.info(\"Teacher deleted\");\n            this.loadTeachers();\n          },\n          (error) => {\n            this.alert.error(\"Please try later\", \"Unexpected error\");\n          }\n        );\n      });\n  }\n\n  private loadTeachers() {\n    this.teacherService.getAll().subscribe(\n      (response) => {\n        this.teachers = response;\n      },\n      (error) => {\n        this.alert.error(\"Please try later\", \"Unexpected error\");\n      }\n    );\n  }\n}\n","<div class=\"container-fluid pt-2\">\n  <cm-common-header title=\"Teachers\" (onAddClick)=\"addTeacher()\"></cm-common-header>\n\n  <div class=\"row pt-5\">\n    <table class=\"table table-striped\">\n      <thead>\n      <tr>\n        <th scope=\"col\">#</th>\n        <th scope=\"col\">Name</th>\n        <th scope=\"col\" class=\"pull-right action-column\">Actions</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr *ngFor=\"let teacher of teachers; index as i\">\n        <th scope=\"row\">{{ i + 1 }}</th>\n        <td>{{ teacher.firstName }} {{ teacher.lastName}}</td>\n        <td class=\"pull-right action-column\">\n          <button class=\"btn btn-info btn-sm mr-1\" type=\"button\" (click)=\"editTeacher(teacher)\">\n            Edit\n          </button>\n\n          <button class=\"btn btn-danger btn-sm\" type=\"button\" (click)=\"deleteTeacher(teacher)\">\n            Delete\n          </button>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TeacherListComponent } from './teacher-list/teacher-list.component';\n\nconst routes: Routes = [\n  { path: '', component: TeacherListComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TeacherRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TeacherRoutingModule } from './teacher-routing.module';\nimport { TeacherListComponent } from './teacher-list/teacher-list.component';\nimport { TeacherModalComponent } from './shared/teacher-modal/teacher-modal.component';\nimport { SharedModule } from '../shared/shared.module';\n\n\n@NgModule({\n  declarations: [\n    TeacherListComponent,\n    TeacherModalComponent\n  ],\n  imports: [\n    CommonModule,\n    TeacherRoutingModule,\n    SharedModule\n  ]\n})\nexport class TeacherModule { }\n"]}