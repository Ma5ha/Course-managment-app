{"version":3,"sources":["webpack:///src/app/home/home-card/home-card.component.ts","webpack:///src/app/home/home-card/home-card.component.html","webpack:///src/app/home/home-details/home-details.component.ts","webpack:///src/app/home/home-details/home-details.component.html","webpack:///src/app/home/home-routing.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/home.module.ts"],"names":["HomeCardComponent","router","navigate","cardItem","id","viewDetails","selector","templateUrl","styleUrls","HomeDetailsComponent","activatedRoute","courseService","alert","getCourse","history","back","snapshot","params","getById","subscribe","result","course","error","endDate","day","month","year","startDate","goBack","routes","path","component","HomeRoutingModule","forChild","imports","exports","HomeComponent","getCourses","getAll","courses","HomeModule","declarations","providers"],"mappings":"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","file":"home-home-module-es5.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { CardItemModel } from '../core/card-item.model';\n\n@Component({\n  selector: 'cm-home-card',\n  templateUrl: './home-card.component.html',\n  styleUrls: ['./home-card.component.css']\n})\nexport class HomeCardComponent implements OnInit {\n\n  @Input() cardItem: CardItemModel;\n\n  constructor(\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  viewDetails() {\n    this.router.navigate(['home/details', this.cardItem.id])\n  }\n\n}\n","<div class=\"card custom-card\" style=\"width: 18rem;\">\n  <div class=\"card-body\">\n    <h5 class=\"card-title\">{{ cardItem.name }}</h5>\n    <p class=\"card-text\">{{ cardItem.description }}</p>\n    <button class=\"btn btn-primary\" (click)=\"viewDetails()\">View Details</button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CourseService } from '../../course/core/course.service';\nimport { AlertService } from 'src/app/shared/alert.service';\nimport { CourseModel } from '../../course/core/course.model';\n\n@Component({\n  selector: 'cm-home-details',\n  templateUrl: './home-details.component.html',\n  styleUrls: ['./home-details.component.css']\n})\nexport class HomeDetailsComponent implements OnInit {\n\n  course: CourseModel;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private courseService: CourseService,\n    private alert: AlertService\n  ) { }\n\n  ngOnInit(): void {\n    this.getCourse();\n  }\n\n  get endDateFormatted(): string {\n    if (!this.course?.endDate) return '';\n\n    const { day, month, year } = this.course.endDate;\n\n    return `${day}/${month}/${year}`;\n  }\n\n  get startDateFormatted(): string {\n    if (!this.course?.startDate) return '';\n\n    const { day, month, year } = this.course.startDate;\n\n    return `${day}/${month}/${year}`;\n  }\n\n  goBack() {\n    history.back();\n  }\n  \n  private getCourse() {\n    const { id } = this.activatedRoute.snapshot.params;\n    this.courseService.getById(id).subscribe(\n      (result) => {\n        this.course = result;\n      },\n      error => {\n        this.alert.error(\"Please try later\", \"Unable to get details\");\n      }\n    )\n  }\n\n\n}\n","<div class=\"container\">\n  <div class=\"card\">\n    \n    <div class=\"card-header\">\n      <h4 class=\"text-center\">{{ course?.name }}</h4>\n    </div>\n\n    <div class=\"card-body\">\n\n      <div class=\"row\">\n        <div class=\"col\">\n          <p class=\"font-weight-light\">Description:</p>\n          <p class=\"lead font-italic\">\n            {{ course?.description}}\n          </p>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col\">\n          <p class=\"font-weight-light\">Start Date:</p>\n          <p class=\"lead font-italic\">\n            {{ startDateFormatted }}\n          </p>\n        </div>\n        <div class=\"col\">\n          <p class=\"font-weight-light\">End Date:</p>\n          <p class=\"lead font-italic\">\n            {{ endDateFormatted }}\n          </p>\n        </div>\n        <div class=\"col\">\n          <p class=\"font-weight-light\">City:</p>\n          <p class=\"lead font-italic\">\n            {{ course?.city}}\n          </p>\n        </div>\n      </div>\n\n      <div class=\"row\">\n\n        <div class=\"col\">\n          <p class=\"font-weight-light\">Students:</p>\n          <ng-container *ngIf=\"course?.students; else noStudentsTemplate\">\n            <p class=\"lead font-italic\" *ngFor=\"let student of course.students\"> {{ student.name }}</p>\n          </ng-container>\n          <ng-template #noStudentsTemplate>\n            <p class=\"lead font-italic\"> No students yet. </p>\n          </ng-template>\n        </div>\n\n        <div class=\"col\">\n          <p class=\"font-weight-light\">Teacher:</p>\n          <ng-container *ngIf=\"course?.teacher; else noTeacherTemplate\">\n            <p class=\"lead font-italic\"> {{ course.teacher.name }} </p>\n            \n          </ng-container>\n          <ng-template #noTeacherTemplate>\n            <p class=\"lead font-italic\">The teacher is not assigned yet. </p>\n          </ng-template>\n        </div>\n\n      </div>\n\n    </div>\n\n    <div class=\"card-footer\">\n      <div class=\"row\">\n        <div class=\"col\">\n          <button class=\"btn btn-light\" (click)=\"goBack()\">\n            Back\n          </button>\n        </div>\n      </div>\n    </div>\n  \n  </div>\n</div>\n\n <!-- <div class=\"row\">\n    <h4>{{ course.name }}</h4>\n  </div>\n  \n\n  <div class=\"row\">\n    <p class=\"font-weight-light\">Description:</p>\n    <p>Description: </p>\n  </div>\n  <div class=\"row\">\n    <p class=\"lead\">\n      {{ course.description}}\n    </p>\n  </div>\n  \n  \n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"col-md-8\">\n        <div class=\"row\">\n          <div class=\"col-md-3\">Name:</div>\n          <div class=\"col-md-6\">{{ course.name }}</div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-3\">Description:</div>\n          <div class=\"col-md-6\">{{ course.description }}</div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-3\">City:</div>\n          <div class=\"col-md-6\">{{ course.city }}</div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-3\">Teachers:</div>\n          <div class=\"col-md-6\"></div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-3\">Students:</div>\n          <div class=\"col-md-6\"></div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-3\">Start Date:</div>\n          <div class=\"col-md-6\">\n            {{ course.startDate.day }}/{{ course.startDate.month }}/{{\n              course.startDate.year\n            }}\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-3\">End Date:</div>\n          <div class=\"col-md-6\">\n            {{ course.endDate.day }}/{{ course.endDate.month }}/{{\n              course.endDate.year\n            }}\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"row mt-4\">\n      <div class=\"col-md-4\">\n        <button class=\"btn btn-light\" [routerLink]=\"['/home']\">\n          Back\n        </button>\n      </div>\n    </div>\n  </div> -->\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home.component';\nimport { HomeDetailsComponent } from './home-details/home-details.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent},\n  { path: 'details/:id', component: HomeDetailsComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { CourseService } from '../course/core/course.service';\nimport { CourseModel } from '../course/core/course.model';\nimport { AlertService } from '../shared/alert.service';\n\n@Component({\n  selector: 'cm-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n\n})\nexport class HomeComponent implements OnInit {\n\n  courses: CourseModel[];\n\n  constructor(\n    private courseService: CourseService,\n    private alert: AlertService\n  ) { }\n\n  ngOnInit(): void {\n    this.getCourses();\n  }\n\n  private getCourses() {\n    this.courseService.getAll().subscribe(\n      (result) => {\n        this.courses = result;\n      },\n      (error) => {\n        this.alert.error(\"Please try later\", \"Unable to get details\");\n      }\n    );\n  }\n\n}\n","<div class=\"row\">\n  <cm-home-card *ngFor=\"let course of courses\" [cardItem]=\"course\"></cm-home-card>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HomeRoutingModule } from './home-routing.module';\nimport { HomeCardComponent } from './home-card/home-card.component';\nimport { HomeComponent } from './home.component';\nimport { HomeDetailsComponent } from './home-details/home-details.component';\n\n\n@NgModule({\n  declarations: [\n    HomeComponent,\n    HomeCardComponent,\n    HomeDetailsComponent\n  ],\n  imports: [\n    CommonModule,\n    HomeRoutingModule\n  ],\n  providers: []\n})\nexport class HomeModule { }\n"]}